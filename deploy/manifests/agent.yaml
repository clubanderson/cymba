apiVersion: v1
kind: Pod
metadata:
  name: agent
spec:
  containers:
  - name: spoke-agent
    image: quay.io/open-cluster-management/registration
    args:
      - "/registration"
      - "agent"
      - "--cluster-name={{ .clusterName }}"
      - "--bootstrap-kubeconfig=/spoke/bootstrap/kubeconfig"
      - "--kubeconfig=/etc/kubernetes/admin.conf"
      - "--namespace=open-cluster-management-agent"
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
          - ALL
      privileged: false
      runAsNonRoot: true
    volumeMounts:
    - name: bootstrap-secret
      mountPath: "/spoke/bootstrap"
      readOnly: true
    - name: hub-kubeconfig
      mountPath: "/spoke/hub-kubeconfig"
    - name: spoke-kubeconfig
      mountPath: "/etc/kubernetes"
  - name: work-agent
    image: quay.io/open-cluster-management/work
    args:
      - "/work"
      - "agent"
      - "--spoke-cluster-name={{ .clusterName }}"
      - "--hub-kubeconfig=/spoke/hub-kubeconfig/kubeconfig"
      - "--kubeconfig=/etc/kubernetes/admin.conf"
      - "--namespace=open-cluster-management-agent"
      - "--listen=0.0.0.0:9443"
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
          - ALL
      privileged: false
      runAsNonRoot: true
    volumeMounts:
    - name: hub-kubeconfig
      mountPath: "/spoke/hub-kubeconfig"
    - name: spoke-kubeconfig
      mountPath: "/etc/kubernetes"
  - name: workload-manager
    image: quay.io/pdettori/podman-controllermanager
    args:
      - "/manager"
      - "--kubeconfig=/etc/kubernetes/admin.conf"
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        add: ["CAP_SYS_ADMIN", "CAP_MKNOD"]
      privileged: false
      runAsNonRoot: true
      seccompProfile:
        type: Localhost
        localhostProfile: /usr/share/containers/seccomp.json
    env:
      - name: PODMAN_URL
        value: tcp://{{ .localIP }}:{{ .podmanPort }}
    volumeMounts:
    - name: spoke-kubeconfig
      mountPath: "/etc/kubernetes"
    - name: podman-socket
      mountPath: "/run/podman"            
  volumes:
  - hostPath:
      path: {{ .apiserverHome }}/bootstrap
      type: DirectoryOrCreate
    name: bootstrap-secret
  - hostPath:
      path: {{ .apiserverHome }}
      type: DirectoryOrCreate
    name: spoke-kubeconfig  
  - hostPath:      
      path: {{ .apiserverHome }}/hub
      type: DirectoryOrCreate
    name: hub-kubeconfig
  - hostPath:      
      path: /run/podman
      type: Directory
    name: podman-socket   